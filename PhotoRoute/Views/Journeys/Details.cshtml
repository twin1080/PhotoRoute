@model PhotoRoute.Models.Journey

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>


<script src="http://maps.google.com/maps/api/js?sensor=true&key=AIzaSyApfwKEs4g69mvxO0OghsagEYDM141ccLo" type="text/javascript"></script>

<style>
    .stationInfo {
        height: 150px;
        width: 250px;
    }
</style>

<div id="canvas" style="height: 600px; width:600px;"></div>

<!--Устанавливаем секцию scripts, которая затем будет рендериться на мастер-странице -->
@section scripts {
    <script type="text/javascript">

        $(document).ready(function() {
            GetMap();
        });

        // Функция загрузки
        function GetMap() {

            google.maps.visualRefresh = true;
            // установка основных координат
            var Perm = new google.maps.LatLng(57.996667, 56.271944);

            // Установка общих параметров отображения карты, как масштаб, центральная точка и тип карты
            var mapOptions = {
                zoom: 15,
                center: Perm,
                mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP,

            };

            // Встраиваем гугл-карты в элемент на странице и получаем объект карты
            var map = new google.maps.Map(document.getElementById("canvas"), mapOptions);

            /*
            // Настраиваем красный маркер, который будет использоваться для центральной точки
            var myLatlng = Perm;

            var marker = new google.maps.Marker({
                position: myLatlng,
                map: map,
                title: 'Станции метро'
            });*/

            // Берем для маркера иконку с сайта google
            //marker.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');

            // Получаем данные

            $.getJSON('@Url.Action("GetData", "Journeys", new {id = Model.Id})',
                function(data) {

                    var journeyPolylineCoordinates = [];

                    // Проходим по всем данным и устанавливаем для них маркеры
                    data.sort(function(a, b) {
                        if (a.Time > b.Time) {
                            return 1;
                        } else if (a.Time < b.Time) {
                            return -1;
                        } else {
                            return 0;
                        }
                    });

                    $.each(data,
                        function(i, item) {

                            journeyPolylineCoordinates.push({ lat: item.latitude, lng: item.longitude });

                            var marker = new google.maps.Marker({
                                //'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),55.752622, 37.617567
                                'position': new google.maps.LatLng(item.latitude, item.longitude),
                                'map': map,
                                'title': "test"
                            });

                            // Берем для этих маркеров синие иконки с сайта google
                            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png');

                            // Для каждого объекта добавляем доп. информацию, выводимую в отдельном окне
                            var infowindow = new google.maps.InfoWindow({
                                content:
                                    "<div class='stationInfo'><img src="+item.file+"></div>"
                            });

                            // обработчик нажатия на маркер объекта
                            google.maps.event.addListener(marker,
                                'click',
                                function() {
                                    infowindow.open(map, marker);
                                });

                        });


                    var journeyPolyline = new google.maps.Polyline({
                        path: journeyPolylineCoordinates,
                        geodesic: true,
                        strokeColor: '#FF0000',
                        strokeOpacity: 1.0,
                        strokeWeight: 2
                    });
                    journeyPolyline.setMap(map);

                    if (journeyPolylineCoordinates.length > 0) {
                        var journeyStart = new google.maps.LatLng(journeyPolylineCoordinates[0], journeyPolylineCoordinates[0]);
                        map.panTo(journeyStart);
                    }
                });
        }
    </script>
}






<div>
    <h4>Journey</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
